import random

q = 2**64 - 2**32 + 1
N = 512
hN = 256 # N >> 1

# 1024-th primitive root of unity mod q
# needed to multipy in Z[x]/(x^512+1)

psi = 19112242249724047

# inverse of N modulo q

inv_N = 18410715272404008961  

# bit reversed arrays of powers of psi

psi_rev = [ 1, 18446462594437873665, 1099511627520, 16777216, 18446744000695107585, 4503599626321920, 4096, 17293822564807737345, 
17179869180, 262144, 18446739671368073217, 288230376084602880, 64, 18428729670905102337, 70368744161280, 1073741824,
18446744060824649729, 562949953290240, 512, 18302628881338728449, 137438953440, 2097152, 18446708885042495489,
2305843008676823040, 8, 18444492269600899073, 8796093020160, 134217728, 18446743519658770433, 36028797010575360, 32768, 
9223372032559808513, 72058693532778496, 18374687574905061377, 18446744065119551490, 4294901759, 18446726477496979457,
18446726476960108545, 4503599627370480, 4503599627370512, 18158513693262871553, 288230376151710720,
18445618186687873025, 18445618152328134657, 4611756386097823744, 13835128420805115905, 18446743794532483137,
274873712576, 18446741870424883713, 18446741870357774849, 562949953421310, 562949953421314, 16140901060200882177,
2305843009213685760, 18437737007600893953, 18437736732722987009, 576469548262227968, 17870292113338400769,
18446744035054321673, 34359214072, 18446603334073745409, 18446603329778778113, 36028797018963840, 36028797018964096,
16192975500896648969, 13801972045324315718, 10105805016917838453, 7884753188935386879, 4299803665592489687,
17330401598553671485, 10382722127243543029, 12053668962110821384, 3328437340319972906, 411429644661718300,
16933017626115159474, 2341058142559915780, 3332764170168812040, 16329239638270742865, 1135478653231209757,
6562114217670983589, 2843318466875884251, 9083829225849678056, 8215369291935911999, 1506708620263852673,
8180754653145198927, 3291437157293746400, 6336932523019185545, 281721071064741919, 416595521271101505,
18182056015521604139, 7059463857684370340, 7737793303239342069, 15951685255325333175, 9516004302527281633,
9274800740290006948, 4195631349813649467, 5575382163818481237, 4404853092538523347, 8288405288461869359,
9952623958621855812, 1356658891109943458, 7298973816981743824, 18142929134658341675, 1362567150328163374,
5029422726070465669, 17449332314429639298, 13039192753378044028, 5965722551466996711, 6336321165505697069,
5209436881246729393, 13949104517951277988, 9778634991702905054, 14004640413449681173, 912371727122717978,
13797081185216407910, 4782006911144666502, 3341893669734556710, 10467450029535024137, 12079821679951430619,
10832292272906805046, 7709569171718681254, 16792080670893602455, 10967010099451201909, 5834015391316509212,
10853271128879547664, 3051558327610197629, 16016224591364643153, 10900537202625306992, 1644572010096941946,
8286160002038086708, 6979306088310177371, 9780749169175637327, 4379521825066653820, 13231174195295398387,
3105368020750933651, 16549024694582589649, 10773575572760153082, 14276112633913910454, 3588235763047079665,
16691665375249202323, 13018888299131362939, 13805406186829188324, 3953731985901328040, 17225392536559506335,
9770812262840623888, 13183111817796039999, 11917386045977981907, 18209529147560584987, 12401628304422887372,
3528436654823777706, 10259142034962052999, 4406114516091528337, 13156576080775535568, 10949047808060940701,
494216498237666005, 4459017075746761332, 16589430531118646239, 13615673215290265491, 6396200096592884887,
3264989070758626945, 12499229437757822825, 13376768784840513824, 12184322017746068437, 17571109804126144978,
7929601155018190654, 8540276921445729647, 7128984430570800425, 4415056545429189734, 12584286203165206160,
13533145890581203496, 9432384046970425189, 11622144959503752099, 6740689031673534997, 7562975036722005970,
5033358220335838486, 17746383299198219332, 5602886161730919912, 3373377623857539246, 17032024114559111334,
5163568085532294797, 8440569278248727675, 16031446777576706363, 1672096098105064228, 743439328957095187,
7760115154989660995, 14780429931651188987, 5240855794895625891, 11441669947107069577, 8096577031901772269,
12981983163322084213, 1691643236322650437, 16873708294018933551, 6968564197111712876, 7159778541829602319,
6434636298004421797, 4016101032690928304, 4545880015766881148, 14319745502085270124, 6125875985213995509,
14576581034276612555, 7882761346440596851, 4674437595989441835, 14235159967861628657, 12573252732142656207,
3266250949199600360, 15503969011144524712, 5988353545162139946, 17222793189829815283, 9791607036678152304,
11013340222467950926, 7683263524182218559, 13351287672668691770, 7721858563281021845, 502012629086366038,
3200815326405523330, 8352301510068328051, 408281368649950045, 1937996126393065589, 14583602245206205734,
13682064192112842111, 17920296056720464863, 3877499600194655066, 12113519742882795430, 5932183857725394514,
8807895225777549048, 11744640894413513105, 6084072299099782489, 802080937612788754, 16643667963227857075,
17255643403020241594, 13754189079328553053, 15387314553928353233, 11336048296972946422, 13271129814541932305,
13730337689951546503, 16003277697834987077, 10302972367325609442, 13787254465881465880, 1999001684679808555,
14439691868389311614, 13609673538787597335, 15992013477438468440, 8636802660946538252, 18064315379978805435,
16901410098125234092, 13935318169262536835, 17608981172539450419, 17345757166192390690, 15122929597976639421,
1723406808235183235, 11779090253969091270, 6416647500902310032, 4022135219920766353, 8917938738259842505,
17799792287555502819, 12418052014939319938, 19112242249724047, 2951359516584421996, 2877957390243263830,
8911053381972245530, 6431860813144680379, 644010080489266561, 4496767977211359228, 6151214463239765361,
12150643879775871958, 11091989500308225777, 5810722514138689194, 4323157012483891262, 1223183503982339008,
4419568367257164534, 18168576350837626231, 16905094363786184290, 12333197645027200248, 16221402320798919601,
9785468031858712064, 16909802868642731951, 4971430691134054059, 14948939724807468932, 9592291974280344910,
16138512030456545775, 152897937997792376, 5164132063260791647, 4576915052531526319, 15948194847534211277,
14561398366328274390, 5152080643914132488, 17527399748276289503, 12316227567088954246, 18074852694000884838,
15913274187758939207, 8024399707039913807, 14099721646927849786, 4295815520590785595, 14290012408112277771,
7812684066897416275, 8424275818888585779, 14248669673568039774, 1949690407240864933, 16677776346006097586,
10670334717871145615, 13092440112352401730, 3878624198769971593, 15499491376360706981, 16938470071482338896,
12066191983457963400, 13315466594398149922, 12505800551746292235, 12582249520745188423, 3308892972056812266,
15597523257926919464, 4295002282146690441, 11575701465310827636, 15471613066104988457, 16625729085584007730,
8854965448075557493, 2117308758935292362, 15919780095311700439, 3639634848410716242, 7161240326935577237,
12053974342864933269, 17740512949860132546, 11724314991892485077, 11630195332861834531, 9931515098122800394,
14031575217582598302, 7786896173617522154, 3416153203055267997, 5919394105455887829, 8540402708529449685,
15719620231976724277, 12577098593386243920, 299265237327641189, 10141440556758839363, 12486396704535672088,
6462738526574037144, 8427667919763358302, 6365632919551470868, 14808420073763128510, 7344548176412377620,
7657453289212455099, 12982989459991844517, 15076497439326288290, 8383068400017029755, 2394121898621129512,
12796895112978970121, 1560799588066959011, 807842315821754643, 5665144507324065868, 1572137324173280490,
6954937180696424269, 8882481555027559655, 10461664704817933990, 10765599713046287558, 1392595059675174803,
3158366299580748670, 16651939688552765673, 9714604383004622450, 5500770423122943299, 8178098736737310378,
4025446980409437899, 625810225600154958, 6889485207579503204, 12992126221614554207, 1561169760991269037,
6468851066622783835, 15339107541552850108, 17668002479022071670, 14259728110745696775, 15049383599936516047,
12216811346274483113, 14857320394153102038, 12032395915935294938, 5006481804801239664, 18222393521806856990,
11703289425843512051, 12489358087930152296, 12337821426711963180, 11140760477401398424, 6820186327231405039,
4088309022520035137, 3929858786378642316, 7112675246154377750, 10084557685654730061, 13756831773860918871,
1849525312019627755, 3142428394956321713, 432040889165782054, 8715504128117593387, 14191609616972732304,
17198795428657782689, 12490609572415712870, 14006089359128464711, 7500740417092890225, 6189017649778497877,
4372556084940235727, 12365007338637617157, 7689155552768670394, 16647976583058746422, 9203872837195467135,
4389942117088447138, 1773951202121591538, 18290750489319984117, 6173012213905610189, 4056604178567881129,
4665691128499368837, 12618653059398814374, 16533704610107301495, 6686338362028015651, 14796202496157022040,
6692683090235989383, 3456327113326256432, 14383800816696994133, 2852412519294352506, 8463154943360171265,
7691156232252781355, 1368250456540211762, 11221484848131637518, 14262353213520121100, 5800932517989445135,
327930691828598087, 3408203337326891081, 1213232278782667512, 12362461035457730117, 16207038811842065314,
14213927998739126201, 16434255353882186006, 15210828825360601653, 3859889564432383484, 17198755642670596954,
8900146263973118671, 2324799763032802220, 2540820207615693247, 16566926477903622666, 151654034847833439,
8462836655462685385, 15860937903541196405, 3030959573425503682, 2346834345155397801, 11006166186397307298,
12432372446044483551, 15984902507394762860, 3418361291673462874, 9513972005086392438, 2623445534628784696,
8818882629200544327, 9705858230261340096, 6665967936588919331, 529102008834432265, 13140475237632941313,
748583878869661002, 17121841670624273282, 11255984160303063976, 12349052935110756804, 14989275032188358951,
14234122862185153691, 4040052327310466906, 18137812093348882831, 7093403778535204495, 15576136931675893974,
82910450496588172, 10886932084851949587, 11015880108829135486, 7439966824493015109, 959967552227305945,
10767003651596136761, 4179502387700367909, 13308480401157259412, 14340064592974746604, 15975288260888972401,
1406998020037882997, 13928631036919645866, 663283603972705376, 12890081553990608899, 5988671030957288016,
7847524879092096009, 16260897004766174524, 6558703133813132827, 9233735841019365682, 3192518480993723602,
13873674549069150927, 5350065414412465710, 5308610189164171624, 2915568066736270329, 2761102078703419584,
16826744251348157030, 7123388440527211897, 17582727038347959133, 13802821046066641766, 2063168383634974384,
43142219979740931, 7000476060236159302, 13175002527791537704, 10362793272935287662, 7709658857044466158,
2128915576975457846, 10689836412287594487, 6715029048772165709, 17031324615803662768, 9115369905823964012,
6337038648111976301, 16505347069079795072, 345137759837927448, 663576273645521453, 13166299875259380027,
5907035176470557038, 5575393374484204350, 4877800464475578311, 3642072560212772351, 5486745524883165993,
1646875315973942213, 11534607820881582817, 18188848021460212523 ]
		
# normal version forward NTT, output in bit reversed order		
		
def NTT_512(a):
	k = 0
	len = 256
	N = 512
	
	while len > 0:
		start = 0
		while start < N:
			k = k+1
			zeta = psi_rev[k]
			for j in range(start,start+len):
				t = (zeta * a[j + len])%q
				a[j + len] = (a[j] - t)%q
				a[j] = (a[j] + t)%q
			start = start + 2*len
		len >>= 1

# normal version backward NTT, input is assumed bit reversed, output normal ordering

def iNTT_512(a):

	k = 512
	len = 1
	N = 512

	while (len < N):
		start = 0
		while start < N:
			k = k-1
			zeta = -psi_rev[k]
			for j in range(start, start + len):
				t = a[j]
				a[j] = (t + a[j + len])%q
				a[j + len] = t - a[j + len]
				a[j + len] = (zeta * a[j + len])%q
			start = start + 2*len
		len <<= 1
 
	for j in range(N):
		a[j] = (inv_N*a[j])%q


# 4 element version
# a is now array of quadruples
# the original a has to be ordered as [[a[i], a[i+128], a[i+1], a[i+1+128]]

def NTT_4_512(a):
	k = 0
	len = 256
	N = 512

	R = 0
	W = 0
	A = 0
	M = 0

	while len > 2:
		start = 0
		while start < (N>>2):
			k = k+1
			zeta = psi_rev[k]
			for j in range(start,start+(len>>2)):
				A1 = a[j]  # read 4 tuple
				A2 = a[j + (len >> 2)] # second 4 tuple	
				t1 = (zeta * A1[1])%q
				t2 = (zeta * A2[1])%q
				t3 = (zeta * A1[3])%q
				t4 = (zeta * A2[3])%q
				a[j] = [(A1[0] + t1)%q, (A2[0] + t2)%q, (A1[2] + t3)%q, (A2[2] + t4)%q]
				a[j+(len>>2)] = [(A1[0] - t1)%q, (A2[0] - t2)%q, (A1[2] - t3)%q, (A2[2] - t4)%q]
				R += 2
				W += 2
				M += 4
				A += 8
			start += (len>>1)
		len >>= 1	

  # doing len = 2 
  
	for j in range(0,N>>2):
		k = k+1
		zeta = psi_rev[k]
		A1 = a[j]
		t1 = (zeta * A1[1])%q
		t2 = (zeta * A1[3])%q
		a[j] = [(A1[0] + t1)%q, (A1[2] + t2)%q, (A1[0] - t1)%q, (A1[2] - t2)%q]	
		R += 1
		W += 1
		M += 2
		A += 4
   
  # doing len = 1

	for j in range(0,N>>2):
		k = k+1
		zeta = psi_rev[k]
		A1 = a[j]
		t1 = (zeta * A1[1])%q
		k = k+1
		zeta = psi_rev[k]  
		t2 = (zeta * A1[3])%q
		a[j] = [(A1[0] + t1)%q, (A1[0] - t1)%q, (A1[2] + t2)%q, (A1[2] - t2)%q]
		R += 1
		W += 1
		M += 2
		A += 4
		
	print(R, W, M, A)


# 4 element version
# a is now array of quadruples where input is assumed in bit reversed order
# chopped up into 4 element arrays, i.e. [[a[i], a[i+1], a[i+2], a[i+3]]
# for i = 4*k and a the original array in bit reversed order

# the output is equal to map_4_lin_offset(original)

def iNTT_4_512(a):
	
	k = 512
	len = 1
	N = 512
   
	# len = 1 separate

	for j in range(N >> 2):
		k = k-1
		zeta1 = -psi_rev[k]
		k = k-1
		zeta2 = -psi_rev[k]
		
		A1 = a[j]
		u1 = (A1[0] + A1[1])%q
		u2 = (zeta1*(A1[0] - A1[1]))%q
			
		v1 = (A1[2] + A1[3])%q
		v2 = (zeta2*(A1[2] - A1[3]))%q
		
		a[j] = [u1, v1, u2, v2]
  
	len = 2  
   
	while (len < (N >> 1)):
		start = 0
		while (start < (N>>2)):  #for start := 0 to (N div 4)-1 by len do
			k = k-1
			zeta1 = -psi_rev[k]
			k = k-1
			zeta2 = -psi_rev[k]
			for j in range(start, start + (len>>1)):
				A1 = a[j]
				A2 = a[j + (len>>1)];
				
				# first pairs
		
				u1 = (A1[0] + A1[1])%q
				u2 = (zeta1*(A1[0] - A1[1]))%q
        
				v1 = (A2[0] + A2[1])%q
				v2 = (zeta2*(A2[0] - A2[1]))%q
		
				# second pairs
				
				u3 = (A1[2] + A1[3])%q
				u4 = (zeta1*(A1[2] - A1[3]))%q
        
				v3 = (A2[2] + A2[3])%q
				v4 = (zeta2*(A2[2] - A2[3]))%q
				
				a[j] = [u1, v1, u3, v3]
				a[j+(len>>1)] = [u2, v2, u4, v4]
			start = start + len
		len = 2*len
  
	# len = N/2 and scaling by N together
 
	k = k-1
	zeta = -psi_rev[k]
	zeta_invN = (zeta*inv_N)%q
 
	for j in range(N>>2):
		A = a[j]
		a[j] = [((A[0] + A[1])*inv_N)%q, (zeta_invN*(A[0] - A[1]))%q, ((A[2] + A[3])*inv_N)%q, (zeta_invN*(A[2] - A[3]))%q];
  
  
# maps a linear list to 4 element tuple list interleaving offset	
	
def map_lin_4_offset(a):
	res = []
	for i in range(N>>2):
		res.append([a[2*i], a[2*i+hN], a[2*i+1], a[2*i+1+hN]])
	return res	
	
# maps list of 4 tuples to linear list	
	
def map_4_lin(a):
	res = []
	for i in range(N>>2):
		res.extend(a[i])
	return res	
	
# maps list of 4 tuples to linear list with offset, inverse operation of map_lin_4_offset
	
def map_4_lin_offset(a):
	res = []
	for i in range(N>>2):
		res.append(a[i][0])
		res.append(a[i][2])

	for i in range(N>>2):
		res.append(a[i][1])
		res.append(a[i][3])
		
	return res		
		
# sanity checking

N = 512
a = [random.randint(0,q-1) for _ in range(N)]
a4 = map_lin_4_offset(a)

a_orig = a.copy() 
a4_orig = a4.copy()

NTT_512(a)
NTT_4_512(a4)

b = map_4_lin(a4)
print("Sanity check 4 way forward:", a == b)

iNTT_512(a);
print("Sanity check inverse NTT:", a == a_orig)

iNTT_4_512(a4)
print("Sanity check 4 way inverse:", a4_orig == a4)

c = map_4_lin_offset(a4)
print("Sanity check inverse maps:", c == a)